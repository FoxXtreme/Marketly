@using Project.ViewModels;
@model ChangePasswordViewModel;

@{
	ViewData["Title"] = "Change Password";
}

<section class="change-password login-register">
	<div class="container">
		<div class="content">
			<div class="nav-head">
				<button class="active">
					Change Password
				</button>
			</div>
			<div class="login-content">
				<div class="form-content">
					<form asp-action="ChangePassword" method="post">
						<div asp-validation-summary="ModelOnly" class="text-denger summary">
							<i class="fa-solid fa-circle-exclamation"></i>
						</div>
						<div class="input">
							<label asp-for="Email">Email address</label>
							<input asp-for="Email" readonly />
							<span asp-validation-for="Email" class="text-denger"></span>
						</div>
						<div class="input">
							<label asp-for="NewPassword"></label>
							<input asp-for="NewPassword" />
							<span asp-validation-for="NewPassword" class="text-denger"></span>
						</div>
						<div class="input">
							<label asp-for="ConfirmNewPassword"></label>
							<input asp-for="ConfirmNewPassword" />
							<span asp-validation-for="ConfirmNewPassword" class="text-denger"></span>
						</div>
						<div class="login-btn">
							<input type="submit" value="Save Changes" />
						</div>
						<div class="back-home">
							<a asp-controller="Items" asp-action="HomePage" class="text-decoration-none mt-3">Back To Home</a>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>
</section>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}