@using Project.ViewModels;
@model LoginViewModel;

@{
	ViewData["Title"] = "Login";
}

<section class="login-register">
	<div class="container">
		<div class="content">
			<div class="welcome-text">
				<h2>Hello,</h2>
				<h3>Log in to Marketly or create an account, don't miss the discounts!</h3>
			</div>
			<div class="nav-head">
				<button class="@(ViewData["ActivePage"]?.ToString() == "Login" ? "active" : "n-active")" onclick="window.location='@Url.Action("Login", "Account")'">
					Log In
				</button>
				<button class="@(ViewData["ActivePage"]?.ToString() == "Register" ? "active" : "n-active")" onclick="window.location='@Url.Action("Register", "Account")'">
					Sign Up
				</button>
			</div>
			<div class="login-content">
				<div class="form-content">
					<form asp-action="Login" method="post">
						<div asp-validation-summary="ModelOnly" class="text-denger summary">
							<i class="fa-solid fa-circle-exclamation"></i>
						</div>
						<div class="input">
							<label asp-for="Email">Email Address</label>
							<input type="email" asp-for="Email" />
						</div>
						<div class="input">
							<label asp-for="Password" ></label>
							<input asp-for="Password" />
						</div>
						<div class="forget-remember">
							<div class="input">
								<input asp-for="RememberMe" />
								<label asp-for="RememberMe"></label>
							</div>
							<a asp-controller="Account" asp-action="VerifyEmail">Forgot your password?</a>
						</div>
						<div class="login-btn">
							<input type="submit" value="Log In"/>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>
</section>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}